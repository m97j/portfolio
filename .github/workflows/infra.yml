name: Provision Azure Infrastructure

on:
  push:
    branches: [ "main" ]
    paths:
      - 'infra/**'
      - '.github/workflows/infra.yml'
  workflow_dispatch:

jobs:
  deploy-infra:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Create Resource Group
        run: |
          az group create --name portfolio-rg --location koreacentral

      # 1. Network
      - name: Deploy Network
        run: |
          az deployment group create \
            --resource-group portfolio-rg \
            --template-file infra/network.bicep \
            --parameters location="koreacentral" \
            --debug

      # 2. DNS Zones + Links
      - name: Deploy DNS Zones and Links
        run: |
          az deployment group create \
            --resource-group portfolio-rg \
            --template-file infra/dns.bicep \
            --parameters vnetName="portfolio-vnet" \
            --debug

      # 3. Database
      - name: Deploy Database
        run: |
          az deployment group create \
            --resource-group portfolio-rg \
            --template-file infra/database.bicep \
            --parameters \
              location="koreacentral" \
              postgresName="nrmx308-pg-pf" \
              postgresDbName="portfolio" \
              administratorLogin="pgadmin" \
              administratorLoginPassword="${{ secrets.POSTGRES_PASSWORD }}" \
              vnetName="portfolio-vnet" \
              pgSubnetName="pgSubnet" \
            --debug

      # 4. Storage
      - name: Deploy Storage
        run: |
          az deployment group create \
            --resource-group portfolio-rg \
            --template-file infra/storage.bicep \
            --parameters \
              location="koreacentral" \
              storageAccountName="portfoliostorage3m0j8" \
              storageContainerName="portfolio-media" \
              vnetName="portfolio-vnet" \
              peSubnetName="peSubnet" \
            --debug

      # 5. Key Vault
      - name: Deploy Key Vault
        run: |
          az deployment group create \
            --resource-group portfolio-rg \
            --template-file infra/keyvault.bicep \
            --parameters \
              location="koreacentral" \
              keyVaultName="portfolio-kv-n3r0m8x" \
              jwtSecret="${{ secrets.JWT_SECRET }}" \
              administratorLoginPassword="${{ secrets.POSTGRES_PASSWORD }}" \
              storageAccountName="portfoliostorage3m0j8" \
              vnetName="portfolio-vnet" \
              peSubnetName="peSubnet" \
            --debug

      # 6. ACR
      - name: Deploy ACR
        run: |
          az deployment group create \
            --resource-group portfolio-rg \
            --template-file infra/acr.bicep \
            --parameters registryName="portfolioacrn3r0m8x" location="koreacentral" \
            --debug

      # 7. Apps
      - name: Deploy Apps
        run: |
          az deployment group create \
            --resource-group portfolio-rg \
            --template-file infra/app.bicep \
            --parameters \
              location="koreacentral" \
              planName="portfolio-plan" \
              frontendAppName="portfolio-frontend" \
              backendAppName="portfolio-backend" \
              registryName="portfolioacr" \
              vnetName="portfolio-vnet" \
              appSubnetName="appSubnet" \
              keyVaultName="portfolio-kv" \
              postgresName="pf-pg" \
              postgresDbName="portfolio" \
              administratorLogin="pgadmin" \
              storageAccountName="portfoliostorage" \
              storageContainerName="portfolio-media" \
            --debug

      # 8. Get Frontend Outbound IPs (JSON 배열로 변환)
      - name: Get Frontend Outbound IPs
        id: frontendIps
        run: |
          ips=$(az webapp show \
            --resource-group portfolio-rg \
            --name portfolio-frontend \
            --query outboundIpAddresses -o tsv)
          # 쉼표로 구분된 문자열을 JSON 배열로 변환
          json=$(echo $ips | jq -R 'split(",")')
          echo "ips=$json" >> $GITHUB_OUTPUT

      # 9. Deploy Access Restriction
      - name: Deploy Access Restriction
        run: |
          az deployment group create \
            --resource-group portfolio-rg \
            --template-file infra/access-restriction.bicep \
            --parameters \
              backendAppName="portfolio-backend" \
              frontendOutboundIps='${{ fromJSON(steps.frontendIps.outputs.ips) }}' \
            --debug
# fb-